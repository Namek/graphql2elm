import com.google.javascript.jscomp.CompilerOptions

apply plugin: 'kotlin2js'
apply plugin: 'kotlin-dce-js'
apply plugin: "com.eriwen.gradle.js"

dependencies {
    compile project(':graphql2elm-js')
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
}

[compileKotlin2Js, compileTestKotlin2Js]*.configure {
    kotlinOptions.moduleKind = "umd"
    kotlinOptions.sourceMap = true
    kotlinOptions.sourceMapEmbedSources = "always"
}

runDceKotlinJs.keep "graphql2elm-js-web.net.namekdev.graphql2elm.js.generateElmCode"

task compileElm(type: Exec) {
    workingDir "${projectDir}/src/web"

    commandLine 'cmd', '/c', "elm-make src/Main.elm --output \"${project.buildDir}/elm/ui.js\""
}

combineJs {
    source = [
        "${buildDir}/kotlin-js-min/main/kotlin.js",
        "${buildDir}/kotlin-js-min/main/graphql2elm-js.js",
        "${buildDir}/kotlin-js-min/main/graphql2elm-js-web.js"
    ]
    dest = file("${temporaryDir}/logic.js")
}

minifyJs {
    source = combineJs
    dest = file("${temporaryDir}/logic.js")
    closure {
        compilerOptions = new CompilerOptions().with {
            setLanguage(CompilerOptions.LanguageMode.ECMASCRIPT5)
            return it
        }
    }
}

task assembleWeb(type: Sync) {
//    from combineJs
    from minifyJs

    from ("${projectDir}/src/web") {
        include 'index.html'
    }

    from ("${project.buildDir}/elm") {
        include 'ui.js'
    }

    into "$web_output_dir"

    dependsOn classes
    dependsOn compileKotlin2Js
    dependsOn compileElm
}

combineJs.dependsOn runDceKotlinJs
assembleWeb.dependsOn combineJs
assemble.dependsOn assembleWeb
