// Generated from C:/Users/Namek/.babun/cygwin/home/Namek/graphql2elm/src\GraphQL.g4 by ANTLR 4.7
package net.namekdev.graphql2elm.parser

import org.antlr.v4.runtime.Lexer
import org.antlr.v4.runtime.CharStream
import org.antlr.v4.runtime.*
import org.antlr.v4.runtime.atn.*
import org.antlr.v4.runtime.dfa.DFA

class GraphQLLexer(input: CharStream) : Lexer(input) {

    @Deprecated("")
    override fun getTokenNames(): Array<String> {
        return tokenNames
    }

    override fun getVocabulary(): Vocabulary {
        return VOCABULARY
    }


    init {
        _interp = LexerATNSimulator(this, _ATN, _decisionToDFA, _sharedContextCache)
    }

    override fun getGrammarFileName(): String {
        return "GraphQL.g4"
    }

    override fun getRuleNames(): Array<String> {
        return Companion.ruleNames
    }

    override fun getSerializedATN(): String {
        return _serializedATN
    }

    override fun getChannelNames(): Array<String> {
        return Companion.channelNames
    }

    override fun getModeNames(): Array<String> {
        return Companion.modeNames
    }

    override fun getATN(): ATN {
        return _ATN
    }

    companion object {
        init {
            RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION)
        }

        protected val _decisionToDFA: Array<DFA>
        protected val _sharedContextCache = PredictionContextCache()
        val T__0 = 1
        val T__1 = 2
        val T__2 = 3
        val T__3 = 4
        val T__4 = 5
        val T__5 = 6
        val T__6 = 7
        val T__7 = 8
        val T__8 = 9
        val T__9 = 10
        val T__10 = 11
        val T__11 = 12
        val T__12 = 13
        val T__13 = 14
        val T__14 = 15
        val T__15 = 16
        val T__16 = 17
        val NAME = 18
        val STRING = 19
        val BOOLEAN = 20
        val NUMBER = 21
        val WS = 22
        var channelNames = arrayOf("DEFAULT_TOKEN_CHANNEL", "HIDDEN")

        var modeNames = arrayOf("DEFAULT_MODE")

        val ruleNames = arrayOf("T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", "NAME", "STRING", "BOOLEAN", "ESC", "UNICODE", "HEX", "NUMBER", "INT", "EXP", "WS")

        private val _LITERAL_NAMES = arrayOf<String?>(null, "'{'", "','", "'}'", "'query'", "'mutation'", "':'", "'('", "')'", "'...'", "'on'", "'fragment'", "'@'", "'\$'", "'='", "'['", "']'", "'!'")
        private val _SYMBOLIC_NAMES = arrayOf<String?>(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "NAME", "STRING", "BOOLEAN", "NUMBER", "WS")
        val VOCABULARY: Vocabulary = VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES)


        @Deprecated("Use {@link #VOCABULARY} instead.")
        val tokenNames: Array<String?>

        init {
            tokenNames = arrayOfNulls(_SYMBOLIC_NAMES.size)
            for (i in tokenNames.indices) {
                tokenNames[i] = VOCABULARY.getLiteralName(i)
                if (tokenNames[i] == null) {
                    tokenNames[i] = VOCABULARY.getSymbolicName(i)
                }

                if (tokenNames[i] == null) {
                    tokenNames[i] = "<INVALID>"
                }
            }
        }

        var _serializedATN = "\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\u0002\u0018\u00c9\b\u0001\u0004\u0002" +
                "\t\u0002\u0004\u0003\t\u0003\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004" +
                "\u000b\t\u000b\u0004\u000C\t\u000C\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010\u0004\u0011\t\u0011\u0004\u0012" +
                "\t\u0012\u0004\u0013\t\u0013\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017\t\u0017\u0004\u0018\t\u0018\u0004\u0019" +
                "\t\u0019\u0004\u001a\t\u001a\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003" +
                "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t" +
                "\u0003\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000C\u0003\u000C\u0003\u000C\u0003\u000C\u0003\u000C\u0003\u000C\u0003\u000C\u0003\u000C\u0003" +
                "\u000C\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013" +
                "\u0007\u0013s\n\u0013\u000C\u0013\u000e\u0013v\u000b\u0013\u0003\u0014\u0003\u0014\u0003\u0014\u0007\u0014{\n\u0014\u000C\u0014\u000e\u0014~\u000b" +
                "\u0014\u0003\u0014\u0003\u0014\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0005\u0015\u008b" +
                "\n\u0015\u0003\u0016\u0003\u0016\u0003\u0016\u0005\u0016\u0090\n\u0016\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0018" +
                "\u0003\u0018\u0003\u0019\u0005\u0019\u009b\n\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0006\u0019\u00a0\n\u0019\r\u0019\u000e\u0019\u00a1" +
                "\u0003\u0019\u0005\u0019\u00a5\n\u0019\u0003\u0019\u0005\u0019\u00a8\n\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0005\u0019\u00ae" +
                "\n\u0019\u0003\u0019\u0005\u0019\u00b1\n\u0019\u0003\u001a\u0003\u001a\u0003\u001a\u0007\u001a\u00b6\n\u001a\u000C\u001a\u000e\u001a\u00b9" +
                "\u000b\u001a\u0005\u001a\u00bb\n\u001a\u0003\u001b\u0003\u001b\u0005\u001b\u00bf\n\u001b\u0003\u001b\u0003\u001b\u0003\u001c\u0006\u001c\u00c4" +
                "\n\u001c\r\u001c\u000e\u001c\u00c5\u0003\u001c\u0003\u001c\u0002\u0002\u001d\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t" +
                "\u0011\n\u0013\u000b\u0015\u000C\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0002" +
                "-\u0002/\u0002\u0031\u0017\u0033\u0002\u0035\u0002\u0037\u0018\u0003\u0002\u000C\u0005\u0002C\\aac|\u0006\u0002\u0032;C\\aac|\u0004\u0002$$^^\n" +
                "\u0002$$\u0031\u0031^^ddhhppttvv\u0005\u0002\u0032;CHch\u0003\u0002\u0032;\u0003\u0002\u0033;\u0004\u0002GGgg\u0004\u0002--//\u0005\u0002" +
                "\u000b\u000C\u000f\u000f\"\"\u0002\u00d3\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002" +
                "\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015" +
                "\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002" +
                "\u0002\u0002\u0002!\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002\u0002\u0002\u0002\u0031\u0003\u0002" +
                "\u0002\u0002\u0002\u0037\u0003\u0002\u0002\u0002\u00039\u0003\u0002\u0002\u0002\u0005;\u0003\u0002\u0002\u0002\u0007=\u0003\u0002\u0002\u0002\t?\u0003\u0002\u0002\u0002\u000bE\u0003\u0002" +
                "\u0002\u0002\rN\u0003\u0002\u0002\u0002\u000fP\u0003\u0002\u0002\u0002\u0011R\u0003\u0002\u0002\u0002\u0013T\u0003\u0002\u0002\u0002\u0015X\u0003\u0002\u0002\u0002\u0017[\u0003" +
                "\u0002\u0002\u0002\u0019d\u0003\u0002\u0002\u0002\u001bf\u0003\u0002\u0002\u0002\u001dh\u0003\u0002\u0002\u0002\u001fj\u0003\u0002\u0002\u0002!l\u0003\u0002\u0002\u0002#n\u0003\u0002" +
                "\u0002\u0002%p\u0003\u0002\u0002\u0002\'w\u0003\u0002\u0002\u0002)\u008a\u0003\u0002\u0002\u0002+\u008c\u0003\u0002\u0002\u0002-\u0091\u0003\u0002\u0002\u0002" +
                "/\u0097\u0003\u0002\u0002\u0002\u0031\u00b0\u0003\u0002\u0002\u0002\u0033\u00ba\u0003\u0002\u0002\u0002\u0035\u00bc\u0003\u0002\u0002\u0002\u0037" +
                "\u00c3\u0003\u0002\u0002\u00029:\u0007}\u0002\u0002:\u0004\u0003\u0002\u0002\u0002;<\u0007.\u0002\u0002<\u0006\u0003\u0002\u0002\u0002=>\u0007\u007f\u0002\u0002>\b" +
                "\u0003\u0002\u0002\u0002?@\u0007s\u0002\u0002@A\u0007w\u0002\u0002AB\u0007g\u0002\u0002BC\u0007t\u0002\u0002CD\u0007{\u0002\u0002D\n\u0003\u0002\u0002\u0002EF\u0007o" +
                "\u0002\u0002FG\u0007w\u0002\u0002GH\u0007v\u0002\u0002HI\u0007c\u0002\u0002IJ\u0007v\u0002\u0002JK\u0007k\u0002\u0002KL\u0007q\u0002\u0002LM\u0007p\u0002\u0002M\u000C" +
                "\u0003\u0002\u0002\u0002NO\u0007<\u0002\u0002O\u000e\u0003\u0002\u0002\u0002PQ\u0007*\u0002\u0002Q\u0010\u0003\u0002\u0002\u0002RS\u0007+\u0002\u0002S\u0012\u0003\u0002\u0002" +
                "\u0002TU\u0007\u0030\u0002\u0002UV\u0007\u0030\u0002\u0002VW\u0007\u0030\u0002\u0002W\u0014\u0003\u0002\u0002\u0002XY\u0007q\u0002\u0002YZ\u0007p\u0002\u0002Z\u0016" +
                "\u0003\u0002\u0002\u0002[\\\u0007h\u0002\u0002\\]\u0007t\u0002\u0002]^\u0007c\u0002\u0002^_\u0007i\u0002\u0002_`\u0007o\u0002\u0002`a\u0007g\u0002\u0002ab\u0007p" +
                "\u0002\u0002bc\u0007v\u0002\u0002c\u0018\u0003\u0002\u0002\u0002de\u0007B\u0002\u0002e\u001a\u0003\u0002\u0002\u0002fg\u0007&\u0002\u0002g\u001c\u0003\u0002\u0002\u0002hi" +
                "\u0007?\u0002\u0002i\u001e\u0003\u0002\u0002\u0002jk\u0007]\u0002\u0002k \u0003\u0002\u0002\u0002lm\u0007_\u0002\u0002m\"\u0003\u0002\u0002\u0002no\u0007#\u0002\u0002o$" +
                "\u0003\u0002\u0002\u0002pt\t\u0002\u0002\u0002qs\t\u0003\u0002\u0002rq\u0003\u0002\u0002\u0002sv\u0003\u0002\u0002\u0002tr\u0003\u0002\u0002\u0002tu\u0003\u0002\u0002\u0002u" +
                "&\u0003\u0002\u0002\u0002vt\u0003\u0002\u0002\u0002w|\u0007$\u0002\u0002x{\u0005+\u0016\u0002y{\n\u0004\u0002\u0002zx\u0003\u0002\u0002\u0002zy\u0003\u0002\u0002\u0002{" +
                "~\u0003\u0002\u0002\u0002|z\u0003\u0002\u0002\u0002|}\u0003\u0002\u0002\u0002}\u007f\u0003\u0002\u0002\u0002~|\u0003\u0002\u0002\u0002\u007f\u0080\u0007$\u0002\u0002" +
                "\u0080(\u0003\u0002\u0002\u0002\u0081\u0082\u0007v\u0002\u0002\u0082\u0083\u0007t\u0002\u0002\u0083\u0084\u0007w\u0002" +
                "\u0002\u0084\u008b\u0007g\u0002\u0002\u0085\u0086\u0007h\u0002\u0002\u0086\u0087\u0007c\u0002\u0002\u0087\u0088" +
                "\u0007n\u0002\u0002\u0088\u0089\u0007u\u0002\u0002\u0089\u008b\u0007g\u0002\u0002\u008a\u0081\u0003\u0002\u0002\u0002\u008a" +
                "\u0085\u0003\u0002\u0002\u0002\u008b*\u0003\u0002\u0002\u0002\u008c\u008f\u0007^\u0002\u0002\u008d\u0090\t\u0005\u0002\u0002\u008e" +
                "\u0090\u0005-\u0017\u0002\u008f\u008d\u0003\u0002\u0002\u0002\u008f\u008e\u0003\u0002\u0002\u0002\u0090,\u0003\u0002\u0002\u0002" +
                "\u0091\u0092\u0007w\u0002\u0002\u0092\u0093\u0005/\u0018\u0002\u0093\u0094\u0005/\u0018\u0002\u0094\u0095" +
                "\u0005/\u0018\u0002\u0095\u0096\u0005/\u0018\u0002\u0096.\u0003\u0002\u0002\u0002\u0097\u0098\t\u0006\u0002\u0002\u0098" +
                "\u0030\u0003\u0002\u0002\u0002\u0099\u009b\u0007/\u0002\u0002\u009a\u0099\u0003\u0002\u0002\u0002\u009a\u009b\u0003\u0002\u0002\u0002" +
                "\u009b\u009c\u0003\u0002\u0002\u0002\u009c\u009d\u0005\u0033\u001a\u0002\u009d\u009f\u0007\u0030\u0002\u0002\u009e" +
                "\u00a0\t\u0007\u0002\u0002\u009f\u009e\u0003\u0002\u0002\u0002\u00a0\u00a1\u0003\u0002\u0002\u0002\u00a1\u009f\u0003\u0002" +
                "\u0002\u0002\u00a1\u00a2\u0003\u0002\u0002\u0002\u00a2\u00a4\u0003\u0002\u0002\u0002\u00a3\u00a5\u0005\u0035\u001b\u0002\u00a4" +
                "\u00a3\u0003\u0002\u0002\u0002\u00a4\u00a5\u0003\u0002\u0002\u0002\u00a5\u00b1\u0003\u0002\u0002\u0002\u00a6\u00a8\u0007/" +
                "\u0002\u0002\u00a7\u00a6\u0003\u0002\u0002\u0002\u00a7\u00a8\u0003\u0002\u0002\u0002\u00a8\u00a9\u0003\u0002\u0002\u0002\u00a9" +
                "\u00aa\u0005\u0033\u001a\u0002\u00aa\u00ab\u0005\u0035\u001b\u0002\u00ab\u00b1\u0003\u0002\u0002\u0002\u00ac\u00ae" +
                "\u0007/\u0002\u0002\u00ad\u00ac\u0003\u0002\u0002\u0002\u00ad\u00ae\u0003\u0002\u0002\u0002\u00ae\u00af\u0003\u0002\u0002\u0002\u00af" +
                "\u00b1\u0005\u0033\u001a\u0002\u00b0\u009a\u0003\u0002\u0002\u0002\u00b0\u00a7\u0003\u0002\u0002\u0002\u00b0\u00ad\u0003" +
                "\u0002\u0002\u0002\u00b1\u0032\u0003\u0002\u0002\u0002\u00b2\u00bb\u0007\u0032\u0002\u0002\u00b3\u00b7\t\b\u0002\u0002\u00b4" +
                "\u00b6\t\u0007\u0002\u0002\u00b5\u00b4\u0003\u0002\u0002\u0002\u00b6\u00b9\u0003\u0002\u0002\u0002\u00b7\u00b5\u0003\u0002" +
                "\u0002\u0002\u00b7\u00b8\u0003\u0002\u0002\u0002\u00b8\u00bb\u0003\u0002\u0002\u0002\u00b9\u00b7\u0003\u0002\u0002\u0002\u00ba" +
                "\u00b2\u0003\u0002\u0002\u0002\u00ba\u00b3\u0003\u0002\u0002\u0002\u00bb\u0034\u0003\u0002\u0002\u0002\u00bc\u00be\t\t\u0002" +
                "\u0002\u00bd\u00bf\t\n\u0002\u0002\u00be\u00bd\u0003\u0002\u0002\u0002\u00be\u00bf\u0003\u0002\u0002\u0002\u00bf\u00c0" +
                "\u0003\u0002\u0002\u0002\u00c0\u00c1\u0005\u0033\u001a\u0002\u00c1\u0036\u0003\u0002\u0002\u0002\u00c2\u00c4\t\u000b\u0002\u0002\u00c3" +
                "\u00c2\u0003\u0002\u0002\u0002\u00c4\u00c5\u0003\u0002\u0002\u0002\u00c5\u00c3\u0003\u0002\u0002\u0002\u00c5\u00c6\u0003\u0002" +
                "\u0002\u0002\u00c6\u00c7\u0003\u0002\u0002\u0002\u00c7\u00c8\b\u001c\u0002\u0002\u00c88\u0003\u0002\u0002\u0002\u0012\u0002tz|\u008a" +
                "\u008f\u009a\u00a1\u00a4\u00a7\u00ad\u00b0\u00b7\u00ba\u00be\u00c5\u0003\b" +
                "\u0002\u0002"
        val _ATN = ATNDeserializer().deserialize(_serializedATN.toCharArray())

        init {
            _decisionToDFA = IntRange(0, _ATN.numberOfDecisions-1)
                .map { DFA(_ATN.getDecisionState(it), it) }
                .toTypedArray()
        }
    }
}